version: '3'
volumes:
  dados:
networks:
  banco:
  web:
  fila:
services:
  db:
    image: postgres:9.6
    volumes:
      # Volume dos dados
      - dados:/var/lib/postgresql/data
      # Scripts
      - ./scripts:/scripts
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
    - banco
  frontend:
    image: nginx:1.13
    volumes:
      # Site
      - ./web:/usr/share/nginx/html/
      # Configuração do Proxy Reverso
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    networks:
      - web
    depends_on: # informa as dependencias a serem exectutadas
      - app
  app:
    image: python:3.6
    volumes:
      # Aplicação
      - ./app:/app
    working_dir: /app
    command: bash ./app.sh
    networks: 
      - banco
      - web
      - fila
    depends_on: 
      - db
      - queue
  queue:
    image: redis:3.2
    networks: 
      - fila
  worker:
    build: worker
    volumes:
      # Worker
      - ./worker:/worker
    working_dir: /worker
    command: worker.py
    networks: 
      - fila
    depends_on:
      - queue


# docker commands log:
#    cd email-worker-compose
#    docker-compose up -d
#    docker-compose ps
#    docker-compose exec db psql -U postgres -c '\l'
#    docker-compose down
#    docker-compose up -d
#    docker-compose exec db psql -U postgres -f /scripts/check.sql
#    docker-compose logs -f -t
#    docker-compose exec db psql -U postgres -d email_sender -c 'select * from emails'
#    docker-compose up -d --scale worker=3
#    docker-compose logs -f -t worker